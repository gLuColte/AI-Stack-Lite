---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose -f ../docker-compose.yml convert -o services.yml
    kompose.version: 1.31.1 (46dcb9181)
  creationTimestamp: null
  labels:
    io.kompose.service: alertmanager
  name: alertmanager
  namespace: default
spec:
  ports:
    - name: "9093"
      port: 9093
      targetPort: 9093
  selector:
    io.kompose.service: alertmanager
status:
  loadBalancer: {}

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose -f ../docker-compose.yml convert -o services.yml
    kompose.version: 1.31.1 (46dcb9181)
  creationTimestamp: null
  labels:
    io.kompose.service: cadvisor
  name: cadvisor
  namespace: default
spec:
  ports:
    - name: "8080"
      port: 8080
      targetPort: 8080
  selector:
    io.kompose.service: cadvisor
status:
  loadBalancer: {}

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose -f ../docker-compose.yml convert -o services.yml
    kompose.version: 1.31.1 (46dcb9181)
  creationTimestamp: null
  labels:
    io.kompose.service: emulator-module
  name: emulator-module
  namespace: default
spec:
  ports:
    - name: "8554"
      port: 8554
      targetPort: 8554
  selector:
    io.kompose.service: emulator-module
status:
  loadBalancer: {}

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose -f ../docker-compose.yml convert -o services.yml
    kompose.version: 1.31.1 (46dcb9181)
  creationTimestamp: null
  labels:
    io.kompose.service: grafana
  name: grafana
  namespace: default
spec:
  ports:
    - name: "3000"
      port: 3000
      targetPort: 3000
  selector:
    io.kompose.service: grafana
status:
  loadBalancer: {}

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose -f ../docker-compose.yml convert -o services.yml
    kompose.version: 1.31.1 (46dcb9181)
  creationTimestamp: null
  labels:
    io.kompose.service: influxdb
  name: influxdb
  namespace: default
spec:
  ports:
    - name: "8086"
      port: 8086
      targetPort: 8086
  selector:
    io.kompose.service: influxdb
status:
  loadBalancer: {}

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose -f ../docker-compose.yml convert -o services.yml
    kompose.version: 1.31.1 (46dcb9181)
  creationTimestamp: null
  labels:
    io.kompose.service: node-exporter
  name: node-exporter
  namespace: default
spec:
  ports:
    - name: "9100"
      port: 9100
      targetPort: 9100
  selector:
    io.kompose.service: node-exporter
status:
  loadBalancer: {}

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose -f ../docker-compose.yml convert -o services.yml
    kompose.version: 1.31.1 (46dcb9181)
  creationTimestamp: null
  labels:
    io.kompose.service: prometheus
  name: prometheus
  namespace: default
spec:
  ports:
    - name: "9090"
      port: 9090
      targetPort: 9090
  selector:
    io.kompose.service: prometheus
status:
  loadBalancer: {}

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose -f ../docker-compose.yml convert -o services.yml
    kompose.version: 1.31.1 (46dcb9181)
  creationTimestamp: null
  labels:
    io.kompose.service: python-module-1
  name: python-module-1
  namespace: default
spec:
  ports:
    - name: "8001"
      port: 8001
      targetPort: 5000
  selector:
    io.kompose.service: python-module-1
status:
  loadBalancer: {}

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose -f ../docker-compose.yml convert -o services.yml
    kompose.version: 1.31.1 (46dcb9181)
  creationTimestamp: null
  labels:
    io.kompose.service: python-module-2
  name: python-module-2
  namespace: default
spec:
  ports:
    - name: "8002"
      port: 8002
      targetPort: 5000
  selector:
    io.kompose.service: python-module-2
status:
  loadBalancer: {}

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose -f ../docker-compose.yml convert -o services.yml
    kompose.version: 1.31.1 (46dcb9181)
  creationTimestamp: null
  labels:
    io.kompose.service: python-module-3
  name: python-module-3
  namespace: default
spec:
  ports:
    - name: "8003"
      port: 8003
      targetPort: 5000
  selector:
    io.kompose.service: python-module-3
status:
  loadBalancer: {}

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose -f ../docker-compose.yml convert -o services.yml
    kompose.version: 1.31.1 (46dcb9181)
  creationTimestamp: null
  labels:
    io.kompose.service: redis
  name: redis
  namespace: default
spec:
  ports:
    - name: "6379"
      port: 6379
      targetPort: 6379
  selector:
    io.kompose.service: redis
status:
  loadBalancer: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose -f ../docker-compose.yml convert -o services.yml
    kompose.version: 1.31.1 (46dcb9181)
  creationTimestamp: null
  labels:
    io.kompose.service: alertmanager
  name: alertmanager
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: alertmanager
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose -f ../docker-compose.yml convert -o services.yml
        kompose.version: 1.31.1 (46dcb9181)
      creationTimestamp: null
      labels:
        io.kompose.network/ai-stack-lite-default: "true"
        io.kompose.service: alertmanager
    spec:
      containers:
        - args:
            - --config.file=/etc/alertmanager/config.yml
            - --storage.path=/alertmanager
          image: prom/alertmanager
          name: alertmanager
          ports:
            - containerPort: 9093
              hostPort: 9093
              protocol: TCP
          resources: {}
          volumeMounts:
            - mountPath: /etc/alertmanager
              name: alertmanager-claim0
      restartPolicy: Always
      volumes:
        - name: alertmanager-claim0
          persistentVolumeClaim:
            claimName: alertmanager-claim0
status: {}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: alertmanager-claim0
  name: alertmanager-claim0
  namespace: default
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}

---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    kompose.cmd: kompose -f ../docker-compose.yml convert -o services.yml
    kompose.version: 1.31.1 (46dcb9181)
  creationTimestamp: null
  labels:
    io.kompose.service: cadvisor
  name: cadvisor
  namespace: default
spec:
  selector:
    matchLabels:
      io.kompose.service: cadvisor
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.network/ai-stack-lite-default: "true"
        io.kompose.service: cadvisor
    spec:
      containers:
        - image: gcr.io/cadvisor/cadvisor
          name: cadvisor
          ports:
            - containerPort: 8080
              hostPort: 8080
              protocol: TCP
          resources: {}
          volumeMounts:
            - mountPath: /rootfs
              name: cadvisor-claim0
              readOnly: true
            - mountPath: /var/run
              name: cadvisor-claim1
            - mountPath: /sys
              name: cadvisor-claim2
              readOnly: true
            - mountPath: /var/lib/docker
              name: cadvisor-claim3
              readOnly: true
      restartPolicy: Always
      volumes:
        - name: cadvisor-claim0
          persistentVolumeClaim:
            claimName: cadvisor-claim0
            readOnly: true
        - name: cadvisor-claim1
          persistentVolumeClaim:
            claimName: cadvisor-claim1
        - name: cadvisor-claim2
          persistentVolumeClaim:
            claimName: cadvisor-claim2
            readOnly: true
        - name: cadvisor-claim3
          persistentVolumeClaim:
            claimName: cadvisor-claim3
            readOnly: true
  updateStrategy: {}
status:
  currentNumberScheduled: 0
  desiredNumberScheduled: 0
  numberMisscheduled: 0
  numberReady: 0

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: cadvisor-claim0
  name: cadvisor-claim0
  namespace: default
spec:
  accessModes:
    - ReadOnlyMany
  resources:
    requests:
      storage: 100Mi
status: {}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: cadvisor-claim1
  name: cadvisor-claim1
  namespace: default
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: cadvisor-claim2
  name: cadvisor-claim2
  namespace: default
spec:
  accessModes:
    - ReadOnlyMany
  resources:
    requests:
      storage: 100Mi
status: {}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: cadvisor-claim3
  name: cadvisor-claim3
  namespace: default
spec:
  accessModes:
    - ReadOnlyMany
  resources:
    requests:
      storage: 100Mi
status: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose -f ../docker-compose.yml convert -o services.yml
    kompose.version: 1.31.1 (46dcb9181)
  creationTimestamp: null
  labels:
    io.kompose.service: emulator-module
  name: emulator-module
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: emulator-module
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose -f ../docker-compose.yml convert -o services.yml
        kompose.version: 1.31.1 (46dcb9181)
      creationTimestamp: null
      labels:
        io.kompose.network/ai-stack-lite-default: "true"
        io.kompose.service: emulator-module
    spec:
      containers:
        - env:
            - name: rtsp-live-stream-1
              value: live-1
            - name: rtsp-live-stream-2
              value: live-2
            - name: rtsp-live-stream-3
              value: live-3
            - name: rtsp-sample-MOT1602raw.mp4
              value: sample-2
            - name: rtsp-sample-MOT1608raw.mp4
              value: sample-1
          image: mediamtx-env-1:latest
          name: emulator-module
          ports:
            - containerPort: 8554
              hostPort: 8554
              protocol: TCP
          resources: {}
      restartPolicy: Always
status: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose -f ../docker-compose.yml convert -o services.yml
    kompose.version: 1.31.1 (46dcb9181)
  creationTimestamp: null
  labels:
    io.kompose.service: grafana
  name: grafana
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: grafana
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose -f ../docker-compose.yml convert -o services.yml
        kompose.version: 1.31.1 (46dcb9181)
      creationTimestamp: null
      labels:
        io.kompose.network/ai-stack-lite-default: "true"
        io.kompose.service: grafana
    spec:
      containers:
        - env:
            - name: GF_INSTALL_PLUGINS
              value: grafana-clock-panel,grafana-simple-json-datasource
            - name: GF_SECURITY_ADMIN_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: GF_SECURITY_ADMIN_PASSWORD
                  name: home-garylu-Github-AI-Stack-Lite-grafana-config-monitoring
            - name: GF_SECURITY_ADMIN_USER
              valueFrom:
                configMapKeyRef:
                  key: GF_SECURITY_ADMIN_USER
                  name: home-garylu-Github-AI-Stack-Lite-grafana-config-monitoring
            - name: GF_USERS_ALLOW_SIGN_UP
              valueFrom:
                configMapKeyRef:
                  key: GF_USERS_ALLOW_SIGN_UP
                  name: home-garylu-Github-AI-Stack-Lite-grafana-config-monitoring
          image: grafana/grafana
          name: grafana
          ports:
            - containerPort: 3000
              hostPort: 3000
              protocol: TCP
          resources: {}
          securityContext:
            runAsUser: 472
          volumeMounts:
            - mountPath: /var/lib/grafana
              name: grafana-data
            - mountPath: /etc/grafana/provisioning
              name: grafana-claim1
      restartPolicy: Always
      volumes:
        - name: grafana-data
          persistentVolumeClaim:
            claimName: grafana-data
        - name: grafana-claim1
          persistentVolumeClaim:
            claimName: grafana-claim1
status: {}

---
apiVersion: v1
data:
  GF_SECURITY_ADMIN_PASSWORD: foobar
  GF_SECURITY_ADMIN_USER: admin
  GF_USERS_ALLOW_SIGN_UP: "false"
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: grafana-home-garylu-Github-AI-Stack-Lite-grafana-config-monitoring
  name: home-garylu-Github-AI-Stack-Lite-grafana-config-monitoring
  namespace: default

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: grafana-data
  name: grafana-data
  namespace: default
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: grafana-claim1
  name: grafana-claim1
  namespace: default
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose -f ../docker-compose.yml convert -o services.yml
    kompose.version: 1.31.1 (46dcb9181)
  creationTimestamp: null
  labels:
    io.kompose.service: influxdb
  name: influxdb
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: influxdb
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose -f ../docker-compose.yml convert -o services.yml
        kompose.version: 1.31.1 (46dcb9181)
      creationTimestamp: null
      labels:
        io.kompose.network/ai-stack-lite-default: "true"
        io.kompose.service: influxdb
    spec:
      containers:
        - env:
            - name: DOCKER_INFLUXDB_INIT_ADMIN_TOKEN
              value: alien123
            - name: DOCKER_INFLUXDB_INIT_BUCKET
              value: alien-observatory
            - name: DOCKER_INFLUXDB_INIT_MODE
              value: setup
            - name: DOCKER_INFLUXDB_INIT_ORG
              value: ai-playground
            - name: DOCKER_INFLUXDB_INIT_PASSWORD
              value: admin123
            - name: DOCKER_INFLUXDB_INIT_USERNAME
              value: admin
          image: influxdb:latest
          name: influxdb
          ports:
            - containerPort: 8086
              hostPort: 8086
              protocol: TCP
          resources: {}
      restartPolicy: Always
status: {}

---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    kompose.cmd: kompose -f ../docker-compose.yml convert -o services.yml
    kompose.version: 1.31.1 (46dcb9181)
  creationTimestamp: null
  labels:
    io.kompose.service: node-exporter
  name: node-exporter
  namespace: default
spec:
  selector:
    matchLabels:
      io.kompose.service: node-exporter
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.network/ai-stack-lite-default: "true"
        io.kompose.service: node-exporter
    spec:
      containers:
        - args:
            - --path.procfs=/host/proc
            - --path.sysfs=/host/sys
            - --collector.filesystem.ignored-mount-points
            - ^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($()|/)
          image: prom/node-exporter
          name: node-exporter
          ports:
            - containerPort: 9100
              hostPort: 9100
              protocol: TCP
          resources: {}
          volumeMounts:
            - mountPath: /host/proc
              name: node-exporter-claim0
              readOnly: true
            - mountPath: /host/sys
              name: node-exporter-claim1
              readOnly: true
            - mountPath: /rootfs
              name: node-exporter-claim2
              readOnly: true
      restartPolicy: Always
      volumes:
        - name: node-exporter-claim0
          persistentVolumeClaim:
            claimName: node-exporter-claim0
            readOnly: true
        - name: node-exporter-claim1
          persistentVolumeClaim:
            claimName: node-exporter-claim1
            readOnly: true
        - name: node-exporter-claim2
          persistentVolumeClaim:
            claimName: node-exporter-claim2
            readOnly: true
  updateStrategy: {}
status:
  currentNumberScheduled: 0
  desiredNumberScheduled: 0
  numberMisscheduled: 0
  numberReady: 0

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: node-exporter-claim0
  name: node-exporter-claim0
  namespace: default
spec:
  accessModes:
    - ReadOnlyMany
  resources:
    requests:
      storage: 100Mi
status: {}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: node-exporter-claim1
  name: node-exporter-claim1
  namespace: default
spec:
  accessModes:
    - ReadOnlyMany
  resources:
    requests:
      storage: 100Mi
status: {}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: node-exporter-claim2
  name: node-exporter-claim2
  namespace: default
spec:
  accessModes:
    - ReadOnlyMany
  resources:
    requests:
      storage: 100Mi
status: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose -f ../docker-compose.yml convert -o services.yml
    kompose.version: 1.31.1 (46dcb9181)
  creationTimestamp: null
  labels:
    io.kompose.service: prometheus
  name: prometheus
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: prometheus
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose -f ../docker-compose.yml convert -o services.yml
        kompose.version: 1.31.1 (46dcb9181)
      creationTimestamp: null
      labels:
        io.kompose.network/ai-stack-lite-default: "true"
        io.kompose.service: prometheus
    spec:
      containers:
        - args:
            - --config.file=/etc/prometheus/prometheus.yml
            - --storage.tsdb.path=/prometheus
            - --web.console.libraries=/usr/share/prometheus/console_libraries
            - --web.console.templates=/usr/share/prometheus/consoles
          image: prom/prometheus
          name: prometheus
          ports:
            - containerPort: 9090
              hostPort: 9090
              protocol: TCP
          resources: {}
          volumeMounts:
            - mountPath: /etc/prometheus
              name: prometheus-claim0
            - mountPath: /prometheus
              name: prometheus-data
      restartPolicy: Always
      volumes:
        - name: prometheus-claim0
          persistentVolumeClaim:
            claimName: prometheus-claim0
        - name: prometheus-data
          persistentVolumeClaim:
            claimName: prometheus-data
status: {}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: prometheus-claim0
  name: prometheus-claim0
  namespace: default
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: prometheus-data
  name: prometheus-data
  namespace: default
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose -f ../docker-compose.yml convert -o services.yml
    kompose.version: 1.31.1 (46dcb9181)
  creationTimestamp: null
  labels:
    io.kompose.service: python-module-1
  name: python-module-1
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: python-module-1
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose -f ../docker-compose.yml convert -o services.yml
        kompose.version: 1.31.1 (46dcb9181)
      creationTimestamp: null
      labels:
        io.kompose.network/ai-stack-lite-default: "true"
        io.kompose.service: python-module-1
    spec:
      containers:
        - env:
            - name: MODEL_PATH
              value: yolov8n-pose.pt
            - name: RTSP_INPUT
              value: rtsp://emulator-module:8554/sample-1
            - name: RTSP_OUTPUT
              value: rtsp://emulator-module:8554/live-1
            - name: RUN_SCRIPT_PATH
              value: apps/python/gpu-live-inference-keypoint.py
            - name: RUN_TYPE
              value: python
            - name: VISUALIZATION
              value: "0"
          image: ai-stack-lite-run-1:latest
          name: python-module-1
          ports:
            - containerPort: 5000
              hostPort: 8001
              protocol: TCP
          resources: {}
      restartPolicy: Always
status: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose -f ../docker-compose.yml convert -o services.yml
    kompose.version: 1.31.1 (46dcb9181)
  creationTimestamp: null
  labels:
    io.kompose.service: python-module-2
  name: python-module-2
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: python-module-2
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose -f ../docker-compose.yml convert -o services.yml
        kompose.version: 1.31.1 (46dcb9181)
      creationTimestamp: null
      labels:
        io.kompose.network/ai-stack-lite-default: "true"
        io.kompose.service: python-module-2
    spec:
      containers:
        - env:
            - name: MODEL_PATH
              value: yolov8n-pose.pt
            - name: RTSP_INPUT
              value: rtsp://emulator-module:8554/sample-2
            - name: RTSP_OUTPUT
              value: rtsp://emulator-module:8554/live-2
            - name: RUN_SCRIPT_PATH
              value: apps/python/gpu-live-inference-keypoint.py
            - name: RUN_TYPE
              value: python
            - name: VISUALIZATION
              value: "1"
          image: ai-stack-lite-run-1:latest
          name: python-module-2
          ports:
            - containerPort: 5000
              hostPort: 8002
              protocol: TCP
          resources: {}
      restartPolicy: Always
status: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose -f ../docker-compose.yml convert -o services.yml
    kompose.version: 1.31.1 (46dcb9181)
  creationTimestamp: null
  labels:
    io.kompose.service: python-module-3
  name: python-module-3
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: python-module-3
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose -f ../docker-compose.yml convert -o services.yml
        kompose.version: 1.31.1 (46dcb9181)
      creationTimestamp: null
      labels:
        io.kompose.network/ai-stack-lite-default: "true"
        io.kompose.service: python-module-3
    spec:
      containers:
        - env:
            - name: BUCKET_NAME
              value: alien-observatory
            - name: INFLUX_DB_ORG
              value: ai-playground
            - name: INFLUX_DB_PASSWORD
              value: admin123
            - name: INFLUX_DB_URL
              value: http://influxdb:8086
            - name: INFLUX_DB_USERNAME
              value: admin
            - name: MEASUREMENT_NAME
              value: census
            - name: RUN_SCRIPT_PATH
              value: apps/python/cpu-data-generator.py
            - name: RUN_TYPE
              value: python
          image: ai-stack-lite-run-1:latest
          name: python-module-3
          ports:
            - containerPort: 5000
              hostPort: 8003
              protocol: TCP
          resources: {}
      restartPolicy: Always
status: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose -f ../docker-compose.yml convert -o services.yml
    kompose.version: 1.31.1 (46dcb9181)
  creationTimestamp: null
  labels:
    io.kompose.service: redis
  name: redis
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: redis
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose -f ../docker-compose.yml convert -o services.yml
        kompose.version: 1.31.1 (46dcb9181)
      creationTimestamp: null
      labels:
        io.kompose.network/ai-stack-lite-default: "true"
        io.kompose.service: redis
    spec:
      containers:
        - image: redis:latest
          name: redis
          ports:
            - containerPort: 6379
              hostPort: 6379
              protocol: TCP
          resources: {}
      restartPolicy: Always
status: {}

