version: "3.8"
volumes:
  prometheus_data: {}
  grafana_data: {}

services:
  ####################################
  ############# InfluxDB #############
  ####################################
  influxdb:
    image: influxdb:latest
    container_name: influxdb
    networks:
      - default
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    ports:
      - "8086:8086"
    volumes:
      - /infludb/config:/etc/influxdb2
      - /infludb/db:/var/lib/influxdb2
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=admin
      - DOCKER_INFLUXDB_INIT_PASSWORD=admin123
      - DOCKER_INFLUXDB_INIT_ORG=ai-playground
      - DOCKER_INFLUXDB_INIT_BUCKET=alien-observatory
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=alien123

  ####################################
  ########## MediaMTX Module #########
  ####################################
  emulator-module:
    image: mediamtx-env-1:latest
    ports:
      - 8554:8554/tcp
    environment:
      - rtsp-live-stream-1=live-1
      - rtsp-live-stream-2=live-2
      - rtsp-live-stream-3=live-3
      - rtsp-sample-MOT1608raw.mp4=sample-1
      - rtsp-sample-MOT1602raw.mp4=sample-2
      - rtsp-sample-TrafficCountraw.mp4=sample-3
      
  ####################################
  ########### go2rtc Module ##########
  ####################################
  # go2rtc-module:
  #   image: alexxit/go2rtc
  #   container_name: go2rtc
  #   ports:
  #     - 1984:1984/tcp
  #   volumes:
  #     - ./go2rtc:/config
  
  ####################################
  ########### Python Module ##########
  ####################################
  python-module-1:
    image: ai-stack-lite-run-1:latest
    ports:
      - 8001:5000/tcp
    environment:
      - RUN_TYPE=python
      - RUN_SCRIPT_PATH=apps/python/live-gpu-inference.py
      - MODEL_PATH=yolov8n-pose.pt
      - VISUALIZATION=0
      - RTSP_INPUT=rtsp://emulator-module:8554/sample-1
      - RTSP_OUTPUT=rtsp://emulator-module:8554/live-1
    # Deploy on GPU
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
  python-module-2:
    image: ai-stack-lite-run-1:latest
    ports:
      - 8002:5000/tcp
    environment:
      - RUN_TYPE=python
      - RUN_SCRIPT_PATH=apps/python/live-gpu-inference.py
      - MODEL_PATH=yolov8n-pose.pt
      - VISUALIZATION=1
      - RTSP_INPUT=rtsp://emulator-module:8554/sample-2
      - RTSP_OUTPUT=rtsp://emulator-module:8554/live-2
    # Deploy on GPU
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
  python-module-3:
    image: ai-stack-lite-run-1:latest
    ports:
      - 8003:5000/tcp
    environment:
      - RUN_TYPE=python
      - RUN_SCRIPT_PATH=apps/python/live-cpu-data-generator.py
      - INFLUX_DB_URL=http://influxdb:8086
      - INFLUX_DB_USERNAME=admin
      - INFLUX_DB_PASSWORD=admin123
      - INFLUX_DB_ORG=ai-playground
      - MEASUREMENT_NAME=census
      - BUCKET_NAME=alien-observatory
  python-module-4:
    image: ai-stack-lite-run-1:latest
    ports:
      - 8004:5000/tcp
    environment:
      - RUN_TYPE=python
      - RUN_SCRIPT_PATH=apps/python/live-gpu-inference-traffic.py
      - MODEL_PATH=yolov8x.pt
      - RTSP_INPUT=rtsp://emulator-module:8554/sample-3
      - RTSP_OUTPUT=rtsp://emulator-module:8554/live-3
    # Deploy on GPU
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
  ####################################
  ########## Node Exporter ###########
  ####################################

  # Expose Host Machine Hardware Metrics 
  node-exporter:
    image: prom/node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - "--path.procfs=/host/proc"
      - "--path.sysfs=/host/sys"
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    ports:
      - 9100:9100
    restart: always
    deploy:
      mode: global

  ####################################
  ############ Prometheus ############
  ####################################

  # Log Scrapper - a system to collect and process metrics, not an event logging system
  prometheus:
    image: prom/prometheus
    restart: always
    volumes:
      - ./prometheus:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"
    ports:
      - 9090:9090
    links:
      - cadvisor:cadvisor
      - alertmanager:alertmanager
    depends_on:
      - cadvisor

  ####################################
  ############# Grafana ##############
  ####################################

  # # Dashboard
  grafana:
    image: grafana/grafana
    user: "472"
    restart: always
    environment:
      GF_INSTALL_PLUGINS: "grafana-clock-panel,grafana-simple-json-datasource"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    env_file:
      - ./grafana/config.monitoring
    ports:
      - 3000:3000
  #   depends_on:
  #     - prometheus

  ####################################
  ############# cAdvisor #############
  ####################################

  # Container Advisor, is an open-source tool developed by Google to monitor containers
  cadvisor:
    image: gcr.io/cadvisor/cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - 8080:8080
    restart: always
    deploy:
      mode: global
  # cAdvisor depends on Reddis
  redis: 
    image: redis:latest 
    container_name: redis 
    ports: 
      - 6379:6379 

  ####################################
  ############## Alert ###############
  ####################################

  alertmanager:
    image: prom/alertmanager
    restart: always
    ports:
      - 9093:9093
    volumes:
      - ./alertmanager/:/etc/alertmanager/
    command:
      - "--config.file=/etc/alertmanager/config.yml"
      - "--storage.path=/alertmanager"